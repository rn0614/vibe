---
description: 배포 환경 설정 및 CI/CD 파이프라인
alwaysApply: false
---
# Deployment Rules

## 필수 체크리스트

1. **환경변수 검증**: 모든 `VITE_*` 환경변수 존재 확인
2. **빌드 성공**: TypeScript 에러 없는 상태
3. **테스트 통과**: E2E 테스트 성공
4. **브랜치 전략**: main(prod), develop(staging) 준수

## 강제 패턴

### 환경변수 구조
```bash
VITE_SUPABASE_URL=your_supabase_url
VITE_SUPABASE_ANON_KEY=your_supabase_anon_key
VITE_SUPABASE_PROJECT_ID=your_project_id
VITE_APP_URL=your_app_url
```

### 환경변수 검증
```typescript
const requiredVars = ['VITE_SUPABASE_URL', 'VITE_SUPABASE_ANON_KEY'];
requiredVars.forEach((envVar) => {
  if (!import.meta.env[envVar]) {
    throw new Error(`Missing: ${envVar}`);
  }
});
```

### 빌드 명령어
```json
{
  "scripts": {
    "build": "tsc -b && vite build",
    "build:staging": "vite build --mode staging",
    "build:production": "vite build --mode production"
  }
}
```

### Git 브랜치 네이밍
```bash
feature/기능명
bugfix/버그명
hotfix/긴급수정명
release/v1.0.0
```

### 커밋 메시지 형식
```bash
feat(scope): 설명
fix(scope): 설명
docs(scope): 설명
refactor(scope): 설명
test(scope): 설명
chore(scope): 설명
```

## 배포 환경

### GitHub Actions 기본 템플릿
```yaml
name: CI/CD
on:
  push:
    branches: [main, develop]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    - run: cd front && npm ci
    - run: cd front && npm run build
```

### Vercel 설정
```json
{
  "framework": "vite",
  "buildCommand": "cd front && npm run build",
  "outputDirectory": "front/dist",
  "rewrites": [{"source": "/(.*)", "destination": "/index.html"}]
}
```

### Netlify 설정
```toml
[build]
  command = "cd front && npm run build"
  publish = "front/dist"
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200
```

## 금지사항

- 민감한 정보를 `VITE_` 접두사로 설정
- main 브랜치에 직접 커밋
- 테스트 없이 배포
- 환경변수 검증 생략
- 빌드 에러 무시

## 배포 체크리스트

1. 환경변수 설정 확인
2. `npm run build` 성공 확인
3. `npm run test:e2e` 통과 확인
4. Git 브랜치 전략 준수
5. 헬스체크 URL 동작 확인

## 롤백 절차

```bash
# 이전 태그로 롤백
git tag -l
git checkout v1.0.0
npm run build:production
# 재배포
```
```